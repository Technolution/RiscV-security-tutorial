
/******************************************************************************
 (C) COPYRIGHT 2016 TECHNOLUTION B.V., GOUDA NL
| =======          I                   ==          I    =
|    I             I                    I          I
|    I   ===   === I ===  I ===   ===   I  I    I ====  I   ===  I ===
|    I  /   \ I    I/   I I/   I I   I  I  I    I  I    I  I   I I/   I
|    I  ===== I    I    I I    I I   I  I  I    I  I    I  I   I I    I
|    I  \     I    I    I I    I I   I  I  I   /I  \    I  I   I I    I
|    I   ===   === I    I I    I  ===  ===  === I   ==  I   ===  I    I
|                 +---------------------------------------------------+
+----+            |  +++++++++++++++++++++++++++++++++++++++++++++++++|
     |            |             ++++++++++++++++++++++++++++++++++++++|
     +------------+                          +++++++++++++++++++++++++|
                                                        ++++++++++++++|
                                                                 +++++|
 -----------------------------------------------------------------------------
  Title      :  defintions of the elf file we are exploiting
  Author     :  automatically generated
 -----------------------------------------------------------------------------
  Description:  This make file is generated. Changes will likely be 
                overwritten. This link file contains all address defintions
                of the symbols in the main application we will exploit. These
                symbols can be used by the exploit as helper functions.
******************************************************************************/

SECTIONS
{
	__bss_data_end = 0x8000ce90;
	__bss_data_start = 0x80000444;
	tgt__bss_end = 0x8000ce90;
	tgt__bss_start = 0x80000468;
	__call_exitprocs = 0x6002a478;
	__clz_tab = 0x6002b3ac;
	copy_block = 0x600200fc;
	_ctype_ = 0x6002b2a8;
	__ctype_ptr__ = 0x80000440;
	tgt__data_end = 0x80000444;
	tgt__data_start = 0x80000000;
	dbprintf = 0x60027e08;
	tgt_end = 0x8000d290;
	errno = 0x80000464;
	eTaskGetState = 0x600222bc;
	ExecCmd = 0x60026814;
	exit = 0x60029d40;
	_exit = 0x600280b8;
	fill_block = 0x600200ec;
	__flash_data_start = 0x6002b5c0;
	getGreenTimeMs = 0x60026c90;
	getint = 0x60027888;
	getuint = 0x600277e4;
	getWaitTimeMs = 0x60026ca0;
	g_gpio0 = 0x80000450;
	g_gpio1 = 0x8000ce74;
	_global_impure_ptr = 0x80000438;
	tgt_gp = 0x6002bdc0;
	GPIO_clear_irq = 0x600292b0;
	GPIO_config = 0x600289e8;
	GPIO_disable_irq = 0x6002923c;
	GPIO_drive_inout = 0x6002908c;
	GPIO_enable_irq = 0x600291c8;
	GPIO_get_inputs = 0x60028b84;
	GPIO_get_outputs = 0x60028cf0;
	GPIO_init = 0x60028880;
	GPIO_set_output = 0x60028e5c;
	GPIO_set_outputs = 0x60028a44;
	g_plic = 0x8000ce7c;
	greenTimeMs = 0x80000430;
	g_timer0 = 0x8000ce70;
	g_uart = 0x8000045c;
	HandleCmd = 0x60026b60;
	handle_interrupt = 0x60020264;
	handle_trap = 0x60028340;
	tgt_heap = 0x8000ce90;
	tgt_heap_end = 0x8000ce90;
	tgt_HEAP_SIZE = 0x00000000;
	tgt_heap_start = 0x8000ce90;
	heapSTRUCT_SIZE = 0x80000428;
	HW_get_16bit_reg = 0x60029b00;
	HW_get_16bit_reg_field = 0x60029bc8;
	HW_get_32bit_reg = 0x600299f8;
	HW_get_32bit_reg_field = 0x60029a88;
	HW_get_8bit_reg = 0x60029c48;
	HW_get_8bit_reg_field = 0x60029cf4;
	HW_set_16bit_reg = 0x60029acc;
	HW_set_16bit_reg_field = 0x60029b2c;
	HW_set_32bit_reg = 0x600299cc;
	HW_set_32bit_reg_field = 0x60029a1c;
	HW_set_8bit_reg = 0x60029c18;
	HW_set_8bit_reg_field = 0x60029c70;
	impure_data = 0x80000000;
	_impure_ptr = 0x8000043c;
	_init = 0x60028380;
	init_bss = 0x600200ac;
	InitCmdHandlerTask = 0x60026590;
	init_data = 0x600200c4;
	initLeds = 0x60027008;
	InitTunnelTask = 0x60026cb0;
	isatty = 0x60028144;
	ledOff = 0x60026fdc;
	ledOn = 0x60026fb4;
	led_state = 0x80000458;
	main = 0x600264f0;
	mdump = 0x60027f8c;
	memcpy = 0x60029d74;
	memset = 0x60029e90;
	_mstart = 0x6002000c;
	nmi_vector = 0x60020004;
	pcTimerGetTimerName = 0x60024f28;
	PLIC_claim_interrupt = 0x60029924;
	PLIC_complete_interrupt = 0x60029974;
	PLIC_disable_interrupt = 0x60029834;
	PLIC_enable_interrupt = 0x6002979c;
	PLIC_init = 0x60029668;
	PLIC_set_priority = 0x600298d8;
	PLIC_set_threshold = 0x60029748;
	printf = 0x60027da4;
	printnum = 0x60027634;
	prvAddCurrentTaskToDelayedList = 0x60023ab0;
	prvAllocateTCBAndStack = 0x60023b4c;
	prvCheckForValidListAndQueue = 0x60025588;
	prvCheckTasksWaitingTermination = 0x60023a08;
	prvCopyDataFromQueue = 0x600219bc;
	prvCopyDataToQueue = 0x60021838;
	prvDeleteTCB = 0x60023e68;
	prvGetNextExpireTime = 0x60025110;
	prvHeapInit = 0x60026204;
	prvIdleTask = 0x600237f4;
	prvInitialiseTaskLists = 0x6002394c;
	prvInitialiseTCBVariables = 0x60023820;
	prvInsertTimerInActiveList = 0x600251d0;
	prvIsQueueEmpty = 0x60021b34;
	prvIsQueueFull = 0x60021bbc;
	prvListTaskWithinSingleList = 0x60023c00;
	prvProcessExpiredTimer = 0x60024f5c;
	prvProcessReceivedCommands = 0x600252a8;
	prvProcessTimerOrBlockTask = 0x60025050;
	prvResetNextTaskUnblockTime = 0x60023e9c;
	prvSampleTimeNow = 0x60025170;
	prvSwitchTimerLists = 0x60025458;
	prvTaskCheckFreeStackSpace = 0x60023e0c;
	prvTaskExitError = 0x60026358;
	prvTaskIsTaskSuspended = 0x6002273c;
	prvTestWaitCondition = 0x60025ea0;
	prvTimerTask = 0x6002501c;
	prvUnlockQueue = 0x60021a48;
	prvWriteNameToBuffer = 0x6002425c;
	putchar = 0x600275c4;
	puts = 0x600275f8;
	pvPortMalloc = 0x60025f40;
	pvTaskIncrementMutexHeldCount = 0x600244c8;
	pvTimerGetTimerID = 0x60025694;
	pxCurrentTCB = 0x80000444;
	pxCurrentTimerList = 0x800005cc;
	pxDelayedTaskList = 0x80000534;
	pxOverflowDelayedTaskList = 0x80000538;
	pxOverflowTimerList = 0x800005d0;
	pxPortInitialiseStack = 0x600263b4;
	pxReadyTasksLists = 0x800004a8;
	read = 0x60028188;
	ReceiveCmd = 0x600265f0;
	return_trap = 0x60020138;
	tgt__rodata_end = 0x6002b4b0;
	tgt__rodata_start = 0x6002ae88;
	tgt__sbss_end = 0x80000468;
	tgt__sbss_start = 0x80000444;
	serial_putchr = 0x6002652c;
	setGreenTimeMs = 0x60026c50;
	setLed = 0x60027190;
	setLeds = 0x60027220;
	setTraficLight = 0x60026cf4;
	setWaitTimeMs = 0x60026c70;
	SplitCmd = 0x60026740;
	sprintf = 0x60027eb8;
	sprintf_putch.2409 = 0x60027e6c;
	__srodata_end = 0x6002b5c0;
	__srodata_start = 0x6002b5c0;
	tgt_stack = 0x8000d290;
	tgt__stack = 0x8000d290;
	tgt_stack_end = 0x8000ce90;
	tgt_STACK_SIZE = 0x00000400;
	_start = 0x60020000;
	strcmp = 0x60029f6c;
	strcpy = 0x6002a0e8;
	strlen = 0x6002a18c;
	strnlen = 0x6002a224;
	strtoul = 0x6002a460;
	_strtoul_r = 0x6002a25c;
	stub = 0x60028120;
	TMR_clear_int = 0x60029578;
	TMR_current_value = 0x600295ac;
	TMR_enable_int = 0x6002953c;
	TMR_init = 0x600293d8;
	TMR_reload = 0x600295e8;
	TMR_start = 0x600294c4;
	TMR_stop = 0x60029500;
	trap_entry = 0x60020114;
	trap_vector = 0x60020008;
	UART_fill_tx_fifo = 0x600285a0;
	UART_get_rx = 0x60028670;
	UART_get_rx_status = 0x60028838;
	UART_init = 0x600283e8;
	UART_polled_tx_string = 0x60028794;
	UartRxRdyHandler = 0x600264cc;
	UART_send = 0x600284f8;
	ucHeap = 0x800005dc;
	ucQueueGetQueueType = 0x6002181c;
	__udivdi3 = 0x6002a5f8;
	ulTaskNotifyTake = 0x600244f8;
	__umoddi3 = 0x6002aa60;
	uxCriticalNesting = 0x8000ce6c;
	uxCurrentNumberOfTasks = 0x8000057c;
	uxEventGroupGetNumber = 0x60025f04;
	uxListRemove = 0x60020858;
	uxPendedTicks = 0x8000058c;
	uxQueueGetQueueNumber = 0x600217dc;
	uxQueueMessagesWaiting = 0x600216c8;
	uxQueueMessagesWaitingFromISR = 0x60021764;
	uxQueueSpacesAvailable = 0x6002170c;
	uxSchedulerSuspended = 0x800005a0;
	uxTaskGetNumberOfTasks = 0x60022cc0;
	uxTaskGetSystemState = 0x60022cd0;
	uxTaskGetTaskNumber = 0x60023784;
	uxTaskNumber = 0x80000598;
	uxTaskPriorityGet = 0x600223a4;
	uxTaskPriorityGetFromISR = 0x600223f4;
	uxTaskResetEventItemValue = 0x60024484;
	uxTasksDeleted = 0x80000564;
	uxTopReadyPriority = 0x80000584;
	vApplicationIdleHook = 0x60026c1c;
	vApplicationMallocFailedHook = 0x60026c00;
	vApplicationStackOverflowHook = 0x60026c24;
	vCmdHandlerTask = 0x60026be0;
	vCreateLedTasks = 0x60026e50;
	verbose = 0x8000044c;
	vEventGroupClearBitsCallback = 0x60025e74;
	vEventGroupDelete = 0x60025dc8;
	vEventGroupSetBitsCallback = 0x60025e48;
	vFormatPrintString = 0x60027934;
	vLedPwmTask = 0x60026e94;
	vListInitialise = 0x600206a0;
	vListInitialiseItem = 0x600206f8;
	vListInsert = 0x60020790;
	vListInsertEnd = 0x60020714;
	volatile_memzero = 0x6002961c;
	vPortClearInterruptMask = 0x60026378;
	vPortEndScheduler = 0x600204e0;
	vPortFree = 0x60026128;
	vPortInitialiseBlocks = 0x600261fc;
	vPortInterruptHandler = 0x60026470;
	vPortSetInterruptMask = 0x60026394;
	vPortSetupTimer = 0x60026280;
	vPortSysTickHandler = 0x6002643c;
	vPortYield = 0x60020568;
	vQueueAddToRegistry = 0x60021c54;
	vQueueDelete = 0x60021798;
	vQueueSetQueueNumber = 0x600217f8;
	vQueueUnregisterQueue = 0x60021ce4;
	vQueueWaitForMessageRestricted = 0x60021d54;
	vSerialClose = 0x600274c8;
	vSerialPutString = 0x600273b8;
	vSerialRXTask = 0x600274dc;
	vSerialTxTask = 0x6002756c;
	vTaskDelay = 0x60022238;
	vTaskDelayUntil = 0x6002211c;
	vTaskDelete = 0x6002202c;
	vTaskEndScheduler = 0x60022a7c;
	vTaskEnterCritical = 0x600241dc;
	vTaskExitCritical = 0x60024210;
	vTaskList = 0x600242e0;
	vTaskMissedYield = 0x60023770;
	vTaskNotifyGiveFromISR = 0x60024b3c;
	vTaskPlaceOnEventList = 0x600231ec;
	vTaskPlaceOnEventListRestricted = 0x60023364;
	vTaskPlaceOnUnorderedEventList = 0x60023290;
	vTaskPriorityInherit = 0x60023f68;
	vTaskPrioritySet = 0x60022454;
	vTaskResume = 0x600227cc;
	vTaskSetTaskNumber = 0x600237c0;
	vTaskSetTimeOutState = 0x60023634;
	vTaskStartScheduler = 0x600229d8;
	vTaskSuspend = 0x60022640;
	vTaskSuspendAll = 0x60022aa4;
	vTaskSwitchContext = 0x600230a4;
	vTimerSetTimerID = 0x600256e0;
	vTunnelTask = 0x60026da0;
	waitTimeMs = 0x80000434;
	write = 0x600281e4;
	writeGpio = 0x60027298;
	write_hex = 0x60028274;
	xActiveTimerList1 = 0x800005a4;
	xActiveTimerList2 = 0x800005b8;
	xComPort = 0x80000448;
	xDelayedTaskList1 = 0x8000050c;
	xDelayedTaskList2 = 0x80000520;
	xEnd = 0x8000cde4;
	xEventGroupClearBits = 0x60025b4c;
	xEventGroupCreate = 0x6002572c;
	xEventGroupGetBitsFromISR = 0x60025bd0;
	xEventGroupSetBits = 0x60025c1c;
	xEventGroupSync = 0x60025774;
	xEventGroupWaitBits = 0x60025940;
	xFreeBytesRemaining = 0x8000042c;
	xHeapHasBeenInitialised.1799 = 0x8000cdec;
	xLastTime.2046 = 0x800005d8;
	xNextTaskUnblockTime = 0x8000059c;
	xNumOfOverflows = 0x80000594;
	xPendingReadyList = 0x8000053c;
	xPortGetFreeHeapSize = 0x600261ec;
	xPortStartScheduler = 0x600203a0;
	xQueueCreateCountingSemaphore = 0x60020d08;
	xQueueCreateMutex = 0x60020af4;
	xQueueGenericCreate = 0x60020a04;
	xQueueGenericReceive = 0x60021254;
	xQueueGenericReset = 0x600208e4;
	xQueueGenericSend = 0x60020d88;
	xQueueGenericSendFromISR = 0x60020fc8;
	xQueueGiveFromISR = 0x60021124;
	xQueueGiveMutexRecursive = 0x60020bc0;
	xQueueIsQueueEmptyFromISR = 0x60021b78;
	xQueueIsQueueFullFromISR = 0x60021c08;
	xQueuePeekFromISR = 0x600215f4;
	xQueueReceiveFromISR = 0x600214d4;
	xQueueRegistry = 0x80000468;
	xQueueTakeMutexRecursive = 0x60020c58;
	xRxQueue = 0x8000ce88;
	xSchedulerRunning = 0x80000588;
	xSerialGetChar = 0x60027420;
	xSerialPortInitMinimal = 0x600272e8;
	xSerialPutChar = 0x60027464;
	xSerialWaitForSemaphore = 0x600274b0;
	xStart = 0x8000cddc;
	xStartContext = 0x8000cdf0;
	xSuspendedTaskList = 0x80000568;
	xTaskCheckForTimeOut = 0x60023678;
	xTaskGenericCreate = 0x60021de4;
	xTaskGenericNotify = 0x60024750;
	xTaskGenericNotifyFromISR = 0x60024920;
	xTaskGetCurrentTaskHandle = 0x60023f00;
	xTaskGetSchedulerState = 0x60023f20;
	xTaskGetTickCount = 0x60022c50;
	xTaskGetTickCountFromISR = 0x60022c80;
	xTaskIncrementTick = 0x60022e68;
	xTaskNotifyStateClear = 0x60024c98;
	xTaskNotifyWait = 0x60024604;
	xTaskPriorityDisinherit = 0x600240ac;
	xTaskRemoveFromEventList = 0x6002340c;
	xTaskRemoveFromUnorderedEventList = 0x60023524;
	xTaskResumeAll = 0x60022ac0;
	xTaskResumeFromISR = 0x600228bc;
	xTasksWaitingTermination = 0x80000550;
	xTickCount = 0x80000580;
	xTimerCreate = 0x60024d7c;
	xTimerCreateTimerTask = 0x60024d0c;
	xTimerGenericCommand = 0x60024e30;
	xTimerIsTimerActive = 0x60025640;
	xTimerQueue = 0x800005d4;
	xTxQueue = 0x8000ce8c;
	xYieldPending = 0x80000590;
}